// <auto-generated />
namespace TalentClassLibrary
{
    using System.Data.SqlClient;
    using System.IO;
    using System.Windows.Forms;

    public class SQL
    {
        private SqlConnection conn = null;
        private bool connOwner = false;
         private string connString = @"Data Source=DESKTOP-RMABJLQ;Initial Catalog=TalentDatabase;Integrated Security=True";
       // private string connString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=" + Path.GetDirectoryName(Application.ExecutablePath) + @"\TalentDatabase1.mdf;Integrated Security=True";
        // private string connString = @"Server=tcp:talentdatabase.database.windows.net,1433;Initial Catalog=Talent;Persist Security Info=False;User ID=HR;Password=@@Is29127506;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;";


        private SqlTransaction transaction;
        private bool transactionOwner = false;

        public SqlConnection ScConnection
        {
            get
            {
                if (this.conn == null)
                {
                    this.conn = new SqlConnection(this.connString);
                    this.ScConnection.Open();
                    this.connOwner = true;
                }

                return this.conn;
            }

            set
            {
                this.conn = value;
                this.connOwner = false;
            }
        }

        public SqlTransaction StTransaction
        {
            get
            {
                if (this.transaction == null)
                {
                    this.transaction = this.ScConnection.BeginTransaction();
                    this.transactionOwner = true;
                }

                return this.transaction;
            }

            set
            {
                this.transaction = value;
                this.transactionOwner = false;
            }
        }

        public void CloseDatabaseConnection()
        {
            if (this.connOwner == true && this.conn != null)
            {
                this.conn.Close();
                this.conn.Dispose();
                this.conn = null;
            }
        }

        protected void CommitTransaction()
        {
            if (this.transactionOwner == true && this.transaction != null)
            {
                this.transaction.Commit();
                this.transaction.Dispose();
                this.transaction = null;
            }
        }

        protected void RollbackTransaction()
        {
            if (this.transactionOwner == true && this.transaction != null)
            {
                this.transaction.Rollback();
                this.transaction.Dispose();
                this.transaction = null;
            }
        }
    }
}
